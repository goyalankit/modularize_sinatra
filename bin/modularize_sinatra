#!/usr/bin/env ruby

require 'rubygems'
require 'rubigen'

#Monkey patching for source_index deprecation
unless Gem.respond_to?(:source_index)
  module Gem
    def self.source_index
      sources
    end

    def self.cache
      sources
    end

    SourceIndex = Specification

    class SourceList
      # If you want vendor gems, this is where to start writing code.
      def search( *args ); []; end
      def each( &block ); end
      include Enumerable
    end
  end
end

if %w(-v --version).include? ARGV.first
  require 'modularize_sinatra'
  puts "#{File.basename($0)} #{ModularizeSinatra::VERSION}"
  exit(0)
end

require 'rubigen/scripts/generate'
source = RubiGen::PathSource.new(:application, 
  File.join(File.dirname(__FILE__), "../lib"))
RubiGen::Base.reset_sources
RubiGen::Base.append_sources source
RubiGen::Scripts::Generate.new.run(ARGV, :generator => 'modularize_sinatra')
